"use strict";$(document).ready(function(){setTimeout(getData,500);setTimeout(checkAccount,1000);setInterval(updateTimer,1000);});const staking=[{"constant":true,"inputs":[{"name":"farmer","type":"address"}],"name":"dividendsOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimYield","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalDeposits","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"player","type":"address"},{"name":"amount","type":"uint256"},{"name":"","type":"address"},{"name":"","type":"bytes"}],"name":"receiveApproval","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"shareYield","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"cashout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}];const erc20=[{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"},{"name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"}];const stakeAddress="0x07f2479b209461a8b624a536902f396f631007e9";var provider;var web3;var stakingContract;var account;var divs;async function getData(){if(typeof window.ethereum!=='undefined'){window.ethereum.enable();web3=new Web3(window.ethereum);stakingContract=web3.eth.contract(staking).at(stakeAddress);updateData();}else if(web3Modal.cachedProvider){provider=await web3Modal.connect();web3=new Web3(provider);stakingContract=web3.eth.contract(staking).at(stakeAddress);updateData();}else if(web3){stakingContract=web3.eth.contract(staking).at(stakeAddress);updateData();}}
function updateTimer(){const timeNow=Math.floor(new Date().getTime()/1000);var nextPayout=(Math.floor(timeNow/604800)*604800)+345600;if(nextPayout<timeNow){nextPayout+=604800;}
if(nextPayout-timeNow>603900){$("#payoutCountdown").text("PENDING");}else{$("#payoutCountdown").text((nextPayout-timeNow).toHHMMSS());}}
function updateData(){if(account==null){return setTimeout(updateData,1000);};stakingContract.dividendsOf(account,(err,result)=>{divs=web3.fromWei(result,"ether");$("#yieldEarned").text(Math.floor(divs*100000)/100000);if(divs>0){$("#harvestYield").fadeTo(50,1);}else{$("#harvestYield").fadeTo(50,0.4);}});stakingContract.balances(account,(err,result)=>{const deposited=web3.fromWei(result,"ether");$("#nutsDeposited").text(Math.floor(deposited*100)/100);$("#nutsDeposited2").text(deposited+" NUTS");});stakingContract.totalDeposits((err,result)=>{const total=web3.fromWei(result,"ether");$("#totalDeposited").text(Math.floor(total*100)/100+" NUTS");});const nutsContract=web3.eth.contract(erc20).at("0x84294FC9710e1252d407d3D80A84bC39001bd4A8");nutsContract.balanceOf(account,(err,result)=>{const balance=web3.fromWei(result,"ether");$("#nutsBalance").text(Math.floor(balance*1000)/1000+" NUTS");});setTimeout(updateData,5000);}
function checkAccount(){if(web3&&web3.eth){web3.eth.getAccounts((err,accounts)=>{if(accounts==null||accounts.length==0){console.log("NO ACCOUNT CONNECTED");}else{if(account!=accounts[0]){account=accounts[0];if(stakingContract!=null&&stakingContract._eth.defaultAccount==null){stakingContract._eth.defaultAccount=account;}}
if(account!=null){$("#harvestYield").text("Harvest Yield").removeAttr('onclick').off('click').click(harvestYield);$("#stakeFarm").text("Stake").removeAttr('onclick').css("transition","unset").css("width","47%").off('click').attr('data-toggle','modal').attr('data-target','#stakeModal');$("#unstakeFarm").text("Unstake").removeAttr('onclick').css("display","inline-block").off('click').attr('data-toggle','modal').attr('data-target','#unstakeModal');if(divs==null){$("#harvestYield").fadeTo(0,0.4);stakingContract.dividendsOf(account,(err,result)=>{divs=web3.fromWei(result,"ether");if(divs>0){$("#harvestYield").fadeTo(50,1);}else{$("#harvestYield").fadeTo(50,0.4);}});}else{if(divs>0){$("#harvestYield").fadeTo(50,1);}else{$("#harvestYield").fadeTo(50,0.4);}}}}});}
setTimeout(checkAccount,1000);}
async function connectAccount(){try{if(typeof window.ethereum!=='undefined'){window.ethereum.enable();web3=new Web3(window.ethereum);}else{provider=await web3Modal.connect();web3=new Web3(provider);}
stakingContract=web3.eth.contract(staking).at(stakeAddress);updateData();}catch(e){console.log("Could not get a wallet connection",e);return;}}
function harvestYield(){stakingContract.claimYield(function(error,result){console.log(result);});}
function stakeFarm(){const nutsContract=web3.eth.contract(erc20).at("0x84294FC9710e1252d407d3D80A84bC39001bd4A8");const amount=$("#stakeAmount").val();if(amount>0){nutsContract.approveAndCall(stakeAddress,web3.toWei(amount,"ether"),[],function(error,result){console.log(result);});}}
function unstakeFarm(){const amount=$("#unstakeAmount").val();if(amount>0){stakingContract.cashout(web3.toWei(amount,"ether"),function(error,result){console.log(result);});}}
const Web3Modal=window.Web3Modal.default;const WalletConnectProvider=window.WalletConnectProvider.default;const Fortmatic=window.Fortmatic;const providerOptions={walletconnect:{package:WalletConnectProvider,options:{infuraId:"8043bb2cf99347b1bfadfb233c5325c0",}},fortmatic:{package:Fortmatic,options:{key:"pk_live_802838FFFD42846E"}}};const web3Modal=new Web3Modal({network:"mainnet",cacheProvider:true,providerOptions,disableInjectedProvider:false});Number.prototype.toHHMMSS=function(){var sec_num=parseInt(this,10);var hours=Math.floor(sec_num/3600);var minutes=Math.floor((sec_num-(hours*3600))/60);var seconds=sec_num-(hours*3600)-(minutes*60);if(hours<10){hours="0"+hours;}
if(minutes<10){minutes="0"+minutes;}
if(seconds<10){seconds="0"+seconds;}
return hours+':'+minutes+':'+seconds;};